@charset 'utf-8';
@import 'https://cdnjs.cloudflare.com/ajax/libs/normalize/7.0.0/normalize.min.css';
@import 'fonts.css';

/* Box-Sizing 기본값 변경 */

*,
*::before,
*::after {
    /* *콤마 요거는 여러 명령어를 한번에 처리하고 싶을 때.  */
    box-sizing: border-box;
    /* 기본값은 컨텐츠박스지만 border-box를 선언하면 보더값에 패딩이랑 width값이 포함되서 계산됨. */
}


/* 숨김 콘텐츠 */

legend,
.readable-hidden {
    background: yellow;
    position: absolute;
    left: -9999em;
    /* 요 코드의 특징은 레이어가 독립적 위치를 갖게 함. 그러면서 영역을 갖게 하지 않음. 붕 뜬 것과 같음. 그래서 얘를 큰 수치를 넣어서 화면 밖으로 밀어버리면 보이지 않게 되겠찌!ㅎㅎ*/
    font-size: 0;
    line-height: 0;
    width: 1px;
    margin: -1px 0 0 -1px;
    overflow: hidden;
    /* 폰트~오버플로우 까지의 폰트는 시각적으로 보이진 않는다. 다만 접근성을 고려해 기계적인 부분까지 고려해 코드를 짤 경우를 보여준 것. */
}


/* 링크 스타일  */

a {
    color: inherit;
    text-decoration: none;
}

html {
    font-size: 10px;
}

body {
    background: #fff;
    color: #181818;
    font-size: 1.4rem;
    font-family: 'Noto Sans';
}


/* 헤더  */

.header {
    background: #432219;
    padding: 2rem;
    position: relative;
    /* 메뉴바-컨테이너에서 메인메뉴를 제어하려면 속성이 스테끼만 아니면 됨. 우리는 relative를 사용할거얌. 이건 움직일 준비, ready가 되었다는 뜻. 아무런 옵션값을 주지 않으면 실제로 움직이진 않음. */
}


/* 로고  */

.logo {
    margin: 0;
}


/* 메인 메뉴 제어 버튼 */

.menubar-container {
    /* 뭘 선택할건지 이름을 불러줘야겠지. 나는 메뉴바-컨테이너. 잘 선택했는지 궁금하면 배경색을 칠해보면됨.  */
    position: absolute;
    top: 2rem;
    right: 2rem;
    /* 이 레이어의 배치 위치는 상단 오른쪽 끝. 여백값은 2rem을 갖는다. */
    width: 40px;
    height: 40px;
    overflow: hidden;
}

.btn-menubar {
    outline: 5px solid blue;
    border: 0;
    margin: 0;
    padding: 40px 0 0 0;
    width: 40px;
    height: 40px;
    background: transparent;
    overflow: hidden;
    /* 40px넘는 컨텐츠는 감춰주세요. IR기법.  */
    cursor: pointer;
    /* 커서 올리면 손모양 되는거 */
}

.menubar {
    /* display: block; */
    /* 디스플레이 속성의 값을 블록으로. */
    /* w100% */
    width: 100%;
    height: 5px;
    background: #fff;
    /* margin-bottom: 5px; */
    border-radius: 5px;
    /* 모서리 둥근 값. 각 모서리를 다른 픽셀로 주고 싶으면 시계방향으로 4번 값을 주면 됨. 왼쪽 위, 오른쪽 위, 오른쪽 아래, 왼쪽 아래. */
    position: absolute;
    left: 0;
    cursor: pointer;
    transition: all 0.2s;
}

.menubar-top {
    top: 0;
}

.menubar-act .menubar-top {
    top: 50%;
    transform: rotate(45deg)
    /* translateY50%은 자기자신 값의 50퍼센트라는 뜻. 100이면 100 */
}

.menubar-middle {
    top: 50%;
    transform: translateY(-50%);
    /* 움직이고 싶을 때. 2d 함수. 음수값을 주면 올라가고 양수값은 내려감. %주면 자기가 가진 위치값을 기준으로 움직임.*/
}

.menubar-act .menubar-middle {
    /* 가운데 사이띄움을 주는건 act가 들어갈때만 동작하라는 뜻. */
    transform: translate(-100%, -50%);
}

.menubar-bottom {
    bottom: 0;
}

.menubar-act .menubar-bottom {
    top: 50%;
    transform: rotate(-45deg)
}


/* 메인메뉴  */


/* offCanvas 방식 */

.main-menu {
    list-style: none;
    color: #fff;
    background: rgba(0, 0, 0, 0.5);
    position: fixed;
    left: -10rem;
    top: 0;
    margin: 0;
    width: 0;
    overflow: hidden;
    height: 100vh;
    font-size: 2rem;
    padding: 5rem;
    font-family: 'Noto Sans Bold', sans-serif;
    transition: all 0.5s;
}

.main-menu-act {
    left: 0;
    width: 70vw;
}

.main-menu li {
    margin-bottom: 2rem;
}

.main-menu a {
    display: block;
}


/* 검색 폼 */

.search-form {
    margin: top 2rem;
}

.search-form fieldset {
    margin: 0;
    padding: 0;
    border: 0;
}

.search-form input[type='search'] {
    border: 1px solid #aaa;
    padding: 5px 1px 1px 5px;
    margin: 0;
    width: calc(100% - 45px);
    /* 연산 함수. 반응형 디자인의 기본. 고정된 값이 아니라 백분율 값을 사용하면 됨.*/
    height: 35px;
    /* 브라우저마다 단위를 지원하는게 조금씩 다를 수 있음. 사파리의 경우 rem단위 지원이 완벽하지 않아서 가끔 깜박거리거나 제대로 적용되지 않는 이슈가 발생하기도 함. 그럴 떈 단위를 바꿔보면..해결! */
    border-radius: 5px;
    vertical-align: middle;
    /* 중요!!!! box-sizing: border 이거 안주면 박스 사이즈 안에 보더랑 패딩값이 포함되지 않아 생각보다 박스가 커진당 */
    /* solid는 실선 */
}

.search-form input[type='image'] {
    width: 40px;
    height: 40px;
    vertical-align: middle;
    /* 버티컬 얼라인, 정렬값 */
    /* input 선택할때 근데 생각해보면 input이 두개임! 클래스 속성을 쓰지 않고 해결하는 방법은, input[type='image']타입 속성 까지 선택해주면 됨! */
}


/* 메인 콘텐츠 */

.content {
    padding: 2rem;
}


/* 웹카페 서적 */

.book {
    background: pink;
}

.subject {
    height: 60px;
    background: skyblue url('images/sprite_main.png') no-repeat;
    /* no-repeat 배경 반복되지 않음. 없으면 반복이 기본값 */
    padding-left: 70px;
    font-size: 2rem;
}

.en-subject {
    display: block;
    margin-top: 0.5rem;
    /* 마진은 세로방향으로 만났을 때 투명하기 때문에 서로 병합되는 특성이 있다. 패딩은 병합되지 않는다. 준 값만큼 플러스 되서 표현됨. */
}

.book-subject {
    background-position: 0 0;
}

.book-subject .en-subject {
    color: #abd375;
}

.book-cover {
    margin: 1rem auto;
    /* auto마진 */
    width: 60%;
    text-align: center;
}

.book-cover img {
    max-width: 100%;
    /* 원본보다 더이상 (max) 커지지 마라는 의미. 그냥 width값으로 주면 브라우저 화면이 커지면 이미지도 계속 같이 커짐. */
    height: auto;
}

.book-detail {
    text-align: center;
}

.book-heading,
.book-author-name,
.book-grade {
    margin: 0;
}

.book-grade::before {
    color: #afd371;
    content: "★★★★★";
    font-size: 2.5rem;
    /* before나 after는 가짜 컨텐츠를 만들어주는 요소. 이건 블록에도 안잡힘. 즉 장식용 컨텐츠 만들때 유용.*/
}

.book-summary {
    line-height: 1.5;
}

.book-author,
.book-author-name {
    display: inline-block;
}